<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Storage System Configuration on OpenNebula</title>
    <link>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/</link>
    <description>Recent content in Storage System Configuration on OpenNebula</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overview</title>
      <link>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/overview/</guid>
      <description>Datastore Types Storage in OpenNebula is designed around the concept of Datastores. A Datastore is any storage medium to store disk images. OpenNebula distinguishes between three different Datastore types:&#xA;Images Datastore, which stores the base operating system images, persistent data volumes, CD-ROMs. System Datastore holds disks of running Virtual Machines. Disk are moved from/to the Images when the VMs are deployed/terminated. Files &amp;amp; Kernels Datastore to store plain files (not disk images), e.</description>
    </item>
    <item>
      <title>Datastores</title>
      <link>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/datastores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/datastores/</guid>
      <description>Types OpenNebula features three different datastore types:&#xA;The Image Datastore, stores the Image repository. The System Datastore holds disk for running virtual machines, usually cloned from the Image Datastore. The Files &amp;amp; Kernels Datastore to store plain files used in contextualization, or VM kernels used by some hypervisors. By default, OpenNebula will create an image (default), system (system), and files datastore (files). These datastores are configured to use the SSH protocol to transfer images.</description>
    </item>
    <item>
      <title>NFS/NAS Datastore</title>
      <link>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/nas_ds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/nas_ds/</guid>
      <description>This storage configuration assumes that your Hosts can access and mount a shared volume located on a NAS (Network Attached Storage) server. You will use this shared volume to store VM disk images files. The Virtual Machines will boot also from the shared volume.&#xA;The scalability of this solution will be bound to the performance of your NAS server. However, you can use multiple NAS server simultaneously to improve the scalability of your OpenNebula cloud.</description>
    </item>
    <item>
      <title>Local Storage Datastore</title>
      <link>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/local_ds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/local_ds/</guid>
      <description>This storage configuration uses the local storage area of each Host to run VMs. Additionally youâ€™ll need a storage area for the VM disk image repository. Disk images are transferred from the repository to the hosts using the SSH protocol.&#xA;Front-end Setup The Front-end needs to prepare the storage area for:&#xA;Image Datastores, to store the image repository. System Datastores, will hold temporary disks and files for VMs stopped and undeployed.</description>
    </item>
    <item>
      <title>Ceph Datastore</title>
      <link>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/ceph_ds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/ceph_ds/</guid>
      <description>The Ceph Datastore driver allows the use of Ceph storage for Images and disks of Virtual Machines.&#xA;Warning This driver requires the OpenNebula Nodes using the Ceph driver to be Ceph clients of a running Ceph cluster. More information in Ceph documentation. Ceph Cluster Setup This guide assumes that you already have a functional Ceph Cluster in place. Additionally you need to:&#xA;Create a pool for the OpenNebula datastores. Write down the name of the pool to include it in the datastore definitions.</description>
    </item>
    <item>
      <title>SAN Datastore</title>
      <link>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/lvm_drivers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/lvm_drivers/</guid>
      <description>This storage configuration assumes that Hosts have access to storage devices (LUNs) exported by an Storage Area Network (SAN) server using a suitable protocol like iSCSI or Fiber Channel. The Hosts will interface the devices through the LVM abstraction layer. Virtual Machines run from a LV (logical volume) device instead of plain files. This reduces the overhead of having a filesystem in place and thus it may increase I/O performance.</description>
    </item>
    <item>
      <title>Raw Device Mapping Datastore</title>
      <link>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/dev_ds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/dev_ds/</guid>
      <description>The RDM Datastore is an Image Datastore that enables raw access to block devices on Nodes. This Datastore enables fast VM deployments due to a non-existent transfer operation from the Image Datastore to the System Datastore.&#xA;Warning The Datastore should only be usable by the administrators. Letting users create images in this Datastore is a huge security risk! For example, users could register an image /dev/sda and read the Host filesystem.</description>
    </item>
    <item>
      <title>iSCSI - Libvirt Datastore</title>
      <link>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/iscsi_ds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/iscsi_ds/</guid>
      <description>This Datastore is used to register already existing iSCSI volume available to the hypervisor Nodes.&#xA;Warning The Datastore should only be usable by the administrators. Letting users create images in this Datastore is a huge security risk! Front-end Setup No additional configuration is needed&#xA;Node Setup The Nodes need to meet the following requirements:&#xA;The devices you want to attach to a VM should be accessible by the hypervisor. QEMU needs to be compiled with libiscsi support.</description>
    </item>
    <item>
      <title>Kernels and Files Datastore</title>
      <link>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/file_ds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opennebula.github.io/website/docs/cloud_operation/cloud_clusters_infrastructure_configuration/storage_system_configuration/file_ds/</guid>
      <description>The Kernels &amp;amp; Files Datastore lets you store plain files to be used as VM kernels, ramdisks or any other files that need to be passed to the VM through the contextualization process. The Kernels &amp;amp; Files Datastore does not expose any special storage mechanism but is a simple and secure way to use files within VM templates.&#xA;Configuration The datastores common configuration attributes apply to the Kernels &amp;amp; Files Datastores and can be defined during the creation process or updated once the datastore have been created.</description>
    </item>
  </channel>
</rss>
