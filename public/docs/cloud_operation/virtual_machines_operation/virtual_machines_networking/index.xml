<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Virtual Machines Networking on OpenNebula</title>
    <link>https://opennebula.github.io/website/docs/cloud_operation/virtual_machines_operation/virtual_machines_networking/</link>
    <description>Recent content in Virtual Machines Networking on OpenNebula</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://opennebula.github.io/website/docs/cloud_operation/virtual_machines_operation/virtual_machines_networking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overview</title>
      <link>https://opennebula.github.io/website/docs/cloud_operation/virtual_machines_operation/virtual_machines_networking/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opennebula.github.io/website/docs/cloud_operation/virtual_machines_operation/virtual_machines_networking/overview/</guid>
      <description>This chapter contains documentation on how to create and manage Virtual Networks and their related objects&#xA;How Should I Read This Chapter Before reading this chapter, you should have already installed and configured your cloud. The Chapter is structured as follows:&#xA;The Virtual Networks and Virtual Networks Templates explain how to create networks. The Self Provision section details how regular users can self-provision virtual networks for their use. You will also find information on Security Groups, to easily define firewall rules.</description>
    </item>
    <item>
      <title>Virtual Network Templates</title>
      <link>https://opennebula.github.io/website/docs/cloud_operation/virtual_machines_operation/virtual_machines_networking/vn_templates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opennebula.github.io/website/docs/cloud_operation/virtual_machines_operation/virtual_machines_networking/vn_templates/</guid>
      <description>The Virtual Network Templates allows the end user to create virtual networks without knowing the details of the underlying infrastructure. Typically the administrator sets up the templates with the required physical attributes, e.g. driver or physical device information and let the end user to add all the logic information like address ranges or gateway.&#xA;Virtual Network Templates can be instantiated several times and shared between multiple users.&#xA;Virtual Network Template Definition A Virtual Network Template is a representation of a Virtual Network, so a template can be defined by using the same attributes available for a Virtual Network.</description>
    </item>
    <item>
      <title>Security Groups</title>
      <link>https://opennebula.github.io/website/docs/cloud_operation/virtual_machines_operation/virtual_machines_networking/security_groups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opennebula.github.io/website/docs/cloud_operation/virtual_machines_operation/virtual_machines_networking/security_groups/</guid>
      <description>Security Groups define firewall rules to be applied to Virtual Machines.&#xA;Warning Security groups are not supported for OpenvSwitch. In vCenter environments, NSX is mandatory to enable Security Groups functionality. Defining a Security Group A Security Group is composed of several Rules. Each Rule is defined with the following attributes:&#xA;Attribute Type Meaning Values PROTOCOL Mandatory Defines the protocol of the rule ALL, TCP, UDP, ICMP, IPSEC RULE_TYPE Mandatory Defines the traffic direction INBOUND, OUTBOUND IP Optional If the rule only applies to a specific net.</description>
    </item>
    <item>
      <title>Self Provision</title>
      <link>https://opennebula.github.io/website/docs/cloud_operation/virtual_machines_operation/virtual_machines_networking/self_provision/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opennebula.github.io/website/docs/cloud_operation/virtual_machines_operation/virtual_machines_networking/self_provision/</guid>
      <description>End-users can create their own virtual networks in two different ways:&#xA;making a reservation instantiating a Virtual Network Template. Reservations Reservations allows users to create their own networks consisting on portions of an existing Virtual Network. Each portion is called a Reservation. To implement this you need to:&#xA;Define a VNET, with the desired ARs and configuration attributes. These attributes will be inherited by any Reservation, so the final users do not need to deal with low-level networking details.</description>
    </item>
    <item>
      <title>Virtual Routers</title>
      <link>https://opennebula.github.io/website/docs/cloud_operation/virtual_machines_operation/virtual_machines_networking/vrouter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opennebula.github.io/website/docs/cloud_operation/virtual_machines_operation/virtual_machines_networking/vrouter/</guid>
      <description>Virtual Routers provide routing across Virtual Networks. The administrators can easily connect Virtual Networks from Sunstone and the CLI. The routing itself is implemented with a Virtual Machine appliance available though the market place. This Virtual Machine can be seamlessly deployed in high availability mode.&#xA;Download the Virtual Router Appliance OpenNebula provides appliance which implements various Virtual Network Functions (VNFs), including the virtual router. The virtual router image is prepared to run in a HA mode, and process the context information from OpenNebula.</description>
    </item>
    <item>
      <title>Transparent Proxies</title>
      <link>https://opennebula.github.io/website/docs/cloud_operation/virtual_machines_operation/virtual_machines_networking/tproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opennebula.github.io/website/docs/cloud_operation/virtual_machines_operation/virtual_machines_networking/tproxy/</guid>
      <description>Transparent Proxies make it possible to connect to management services, such as OneGate, by implicitly using the existing data center backbone networking. The OneGate service usually runs on the leader Front-end machine, which makes it difficult for Virtual Machines running in isolated virtual networks to contact it. This situation forces OpenNebula users to design virtual networking in advance, to ensure that VMs can securely reach OneGate. Transparent Proxies have been designed to remove that requirement.</description>
    </item>
  </channel>
</rss>
