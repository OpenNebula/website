name: Build Hugo Site and Publish

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["one-7.0"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build and publish job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.145.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install Node.js dependencies
        run: npm install
      - name: Add node_modules to PATH
        run: echo "$HOME/.npm-global/bin" >> $GITHUB_PATH
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          PATH: ${{ runner.path }}:/usr/local/bin:/usr/bin:/bin:/node_modules/.bin
        run: |
          npx postcss --version # Verify PostCSS installation
          hugo \
            --minify \
            --baseURL "https://docs.opennebula.io/7.0/"
      
# ------------------------------------------------------------------------------
# Publish content
# ------------------------------------------------------------------------------

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true
      
      - name: Get current branch name
        id: get_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
    
      - name: Setup SSH keys
        shell: bash
        run: |
          echo "$SSH_PRIVATE_KEY" > /tmp/id_rsa
          echo "$SSH_PUBLIC_KEY" > /tmp/id_rsa.pub
          sudo chmod 600 /tmp/id_rsa
          sudo chmod 644 /tmp/id_rsa.pub
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
        
      - name: Compile and publish documentation
        id: build_publish_docs
        shell: bash
        env:
          HOST: ${{ secrets.HOST }}
          HOST_PATH: ${{ secrets.HOST_PATH }}
        run: ruby ./publish/publish.rb ${{ steps.get_branch.outputs.branch }}
